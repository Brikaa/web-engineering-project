# REST architecture
- All query parameters
- Map routes to functions, there can exist multiple routes of the same name but with different methods
  - router = {
    "route": {
      "method": function
    }
  }
  - For every request, get method and check router["route"]["method"]
- Some functions have access to database
  - Database controller
- Some functions need the user to be authorized as a certain role, some functions need access to the user context
  - Database controller wrapper function
- Functions need to check valid request body
  - Try, catch -> return 500; console error
- Frontend
  - All JavaScript?
    - Head, body in HTML
    - Create body function
      - Clears current body
      - Determines navbar
      - Does template
    - Component functions call create body function with appropriate html

# MVC architecture (chosen)
- API functions
- Some functions have access to database
  - Database controller
- Some functions need the user to be authorized as a certain role, some functions need access to the user context
  - Database controller wrapper function
- Views are functions that accept controller functions, db and context
  - with_db(function (db) { with_auth(db, 'role', function(db, ctx) { view_fn(ctx, db, controller_fn1, cfn2) }) })
  - with_db(function(db) { view_fn(db, controller_fn1) })
  - function () { view_fn(controller_fn1) }
  - routes are represented as a map of action name to function that doesn't take parameters
- The user lands on a central component that loads the appropriate view according to the action param

- Sign up
  - On signup, create user, empty optional credentials
  - On type choice, insert passenger/company
  - On view, show user data and type data according to role

- Get upcoming flights summary
  - Flights for passenger join companies where start_city_date in future
    - Id
    - Name
    - Start city
    - End city
    - Company name
    - Price
- Get completed flights
  - Same as upcoming flights but start_city_date in past
- Get available flights
  - Same as upcoming flights but with extra condition that there doesn't exist a flight reservation from this passenger
    to this flight
- Get flight details
  - Flight for passenger join companies join cities, consolidate cities
